// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace protoconf {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class BasePacketsProto {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_protoconf_BasePacket__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protoconf.BasePacket, global::protoconf.BasePacket.Builder> internal__static_protoconf_BasePacket__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protoconf_NamePacket__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protoconf.NamePacket, global::protoconf.NamePacket.Builder> internal__static_protoconf_NamePacket__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protoconf_AgePacket__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protoconf.AgePacket, global::protoconf.AgePacket.Builder> internal__static_protoconf_AgePacket__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static BasePacketsProto() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjpyZXBvc2l0b3J5L0dhbWVTZXJ2ZXIvcmVzL3Byb3RvY29uZi9CYXNlUGFj", 
            "a2V0c1Byb3RvLnByb3RvEglwcm90b2NvbmYiNQoKQmFzZVBhY2tldBITCghw", 
            "YWNrZXRJZBgBIAEoBToBMBISCgpwYWNrZXREYXRhGAIgASgMIiAKCk5hbWVQ", 
            "YWNrZXQSEgoEbmFtZRgBIAEoCToEbmFtZSIcCglBZ2VQYWNrZXQSDwoDYWdl", 
            "GAEgASgFOgIxMEItCiBjb20uc2VydmVyLmNsYXNzbG9hZC5wYWNrZXRwcm90", 
          "b0IJUGFja2V0U2V0"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_protoconf_BasePacket__Descriptor = Descriptor.MessageTypes[0];
        internal__static_protoconf_BasePacket__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protoconf.BasePacket, global::protoconf.BasePacket.Builder>(internal__static_protoconf_BasePacket__Descriptor,
                new string[] { "PacketId", "PacketData", });
        internal__static_protoconf_NamePacket__Descriptor = Descriptor.MessageTypes[1];
        internal__static_protoconf_NamePacket__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protoconf.NamePacket, global::protoconf.NamePacket.Builder>(internal__static_protoconf_NamePacket__Descriptor,
                new string[] { "Name", });
        internal__static_protoconf_AgePacket__Descriptor = Descriptor.MessageTypes[2];
        internal__static_protoconf_AgePacket__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protoconf.AgePacket, global::protoconf.AgePacket.Builder>(internal__static_protoconf_AgePacket__Descriptor,
                new string[] { "Age", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BasePacket : pb::GeneratedMessage<BasePacket, BasePacket.Builder> {
    private BasePacket() { }
    private static readonly BasePacket defaultInstance = new BasePacket().MakeReadOnly();
    private static readonly string[] _basePacketFieldNames = new string[] { "packetData", "packetId" };
    private static readonly uint[] _basePacketFieldTags = new uint[] { 18, 8 };
    public static BasePacket DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BasePacket DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BasePacket ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protoconf.BasePacketsProto.internal__static_protoconf_BasePacket__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BasePacket, BasePacket.Builder> InternalFieldAccessors {
      get { return global::protoconf.BasePacketsProto.internal__static_protoconf_BasePacket__FieldAccessorTable; }
    }
    
    public const int PacketIdFieldNumber = 1;
    private bool hasPacketId;
    private int packetId_;
    public bool HasPacketId {
      get { return hasPacketId; }
    }
    public int PacketId {
      get { return packetId_; }
    }
    
    public const int PacketDataFieldNumber = 2;
    private bool hasPacketData;
    private pb::ByteString packetData_ = pb::ByteString.Empty;
    public bool HasPacketData {
      get { return hasPacketData; }
    }
    public pb::ByteString PacketData {
      get { return packetData_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _basePacketFieldNames;
      if (hasPacketId) {
        output.WriteInt32(1, field_names[1], PacketId);
      }
      if (hasPacketData) {
        output.WriteBytes(2, field_names[0], PacketData);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPacketId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, PacketId);
      }
      if (hasPacketData) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, PacketData);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BasePacket ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BasePacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BasePacket ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BasePacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BasePacket ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BasePacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BasePacket ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BasePacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BasePacket ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BasePacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BasePacket MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BasePacket prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BasePacket, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BasePacket cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BasePacket result;
      
      private BasePacket PrepareBuilder() {
        if (resultIsReadOnly) {
          BasePacket original = result;
          result = new BasePacket();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BasePacket MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protoconf.BasePacket.Descriptor; }
      }
      
      public override BasePacket DefaultInstanceForType {
        get { return global::protoconf.BasePacket.DefaultInstance; }
      }
      
      public override BasePacket BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BasePacket) {
          return MergeFrom((BasePacket) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BasePacket other) {
        if (other == global::protoconf.BasePacket.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPacketId) {
          PacketId = other.PacketId;
        }
        if (other.HasPacketData) {
          PacketData = other.PacketData;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_basePacketFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _basePacketFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasPacketId = input.ReadInt32(ref result.packetId_);
              break;
            }
            case 18: {
              result.hasPacketData = input.ReadBytes(ref result.packetData_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPacketId {
        get { return result.hasPacketId; }
      }
      public int PacketId {
        get { return result.PacketId; }
        set { SetPacketId(value); }
      }
      public Builder SetPacketId(int value) {
        PrepareBuilder();
        result.hasPacketId = true;
        result.packetId_ = value;
        return this;
      }
      public Builder ClearPacketId() {
        PrepareBuilder();
        result.hasPacketId = false;
        result.packetId_ = 0;
        return this;
      }
      
      public bool HasPacketData {
        get { return result.hasPacketData; }
      }
      public pb::ByteString PacketData {
        get { return result.PacketData; }
        set { SetPacketData(value); }
      }
      public Builder SetPacketData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPacketData = true;
        result.packetData_ = value;
        return this;
      }
      public Builder ClearPacketData() {
        PrepareBuilder();
        result.hasPacketData = false;
        result.packetData_ = pb::ByteString.Empty;
        return this;
      }
    }
    static BasePacket() {
      object.ReferenceEquals(global::protoconf.BasePacketsProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NamePacket : pb::GeneratedMessage<NamePacket, NamePacket.Builder> {
    private NamePacket() { }
    private static readonly NamePacket defaultInstance = new NamePacket().MakeReadOnly();
    private static readonly string[] _namePacketFieldNames = new string[] { "name" };
    private static readonly uint[] _namePacketFieldTags = new uint[] { 10 };
    public static NamePacket DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NamePacket DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NamePacket ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protoconf.BasePacketsProto.internal__static_protoconf_NamePacket__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NamePacket, NamePacket.Builder> InternalFieldAccessors {
      get { return global::protoconf.BasePacketsProto.internal__static_protoconf_NamePacket__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "name";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _namePacketFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NamePacket ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NamePacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NamePacket ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NamePacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NamePacket ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NamePacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NamePacket ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NamePacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NamePacket ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NamePacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NamePacket MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NamePacket prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NamePacket, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NamePacket cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NamePacket result;
      
      private NamePacket PrepareBuilder() {
        if (resultIsReadOnly) {
          NamePacket original = result;
          result = new NamePacket();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NamePacket MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protoconf.NamePacket.Descriptor; }
      }
      
      public override NamePacket DefaultInstanceForType {
        get { return global::protoconf.NamePacket.DefaultInstance; }
      }
      
      public override NamePacket BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NamePacket) {
          return MergeFrom((NamePacket) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NamePacket other) {
        if (other == global::protoconf.NamePacket.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_namePacketFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _namePacketFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "name";
        return this;
      }
    }
    static NamePacket() {
      object.ReferenceEquals(global::protoconf.BasePacketsProto.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AgePacket : pb::GeneratedMessage<AgePacket, AgePacket.Builder> {
    private AgePacket() { }
    private static readonly AgePacket defaultInstance = new AgePacket().MakeReadOnly();
    private static readonly string[] _agePacketFieldNames = new string[] { "age" };
    private static readonly uint[] _agePacketFieldTags = new uint[] { 8 };
    public static AgePacket DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AgePacket DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AgePacket ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protoconf.BasePacketsProto.internal__static_protoconf_AgePacket__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AgePacket, AgePacket.Builder> InternalFieldAccessors {
      get { return global::protoconf.BasePacketsProto.internal__static_protoconf_AgePacket__FieldAccessorTable; }
    }
    
    public const int AgeFieldNumber = 1;
    private bool hasAge;
    private int age_ = 10;
    public bool HasAge {
      get { return hasAge; }
    }
    public int Age {
      get { return age_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _agePacketFieldNames;
      if (hasAge) {
        output.WriteInt32(1, field_names[0], Age);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAge) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Age);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AgePacket ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AgePacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AgePacket ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AgePacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AgePacket ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AgePacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AgePacket ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AgePacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AgePacket ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AgePacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AgePacket MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AgePacket prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AgePacket, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AgePacket cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AgePacket result;
      
      private AgePacket PrepareBuilder() {
        if (resultIsReadOnly) {
          AgePacket original = result;
          result = new AgePacket();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AgePacket MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protoconf.AgePacket.Descriptor; }
      }
      
      public override AgePacket DefaultInstanceForType {
        get { return global::protoconf.AgePacket.DefaultInstance; }
      }
      
      public override AgePacket BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AgePacket) {
          return MergeFrom((AgePacket) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AgePacket other) {
        if (other == global::protoconf.AgePacket.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAge) {
          Age = other.Age;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_agePacketFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _agePacketFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAge = input.ReadInt32(ref result.age_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAge {
        get { return result.hasAge; }
      }
      public int Age {
        get { return result.Age; }
        set { SetAge(value); }
      }
      public Builder SetAge(int value) {
        PrepareBuilder();
        result.hasAge = true;
        result.age_ = value;
        return this;
      }
      public Builder ClearAge() {
        PrepareBuilder();
        result.hasAge = false;
        result.age_ = 10;
        return this;
      }
    }
    static AgePacket() {
      object.ReferenceEquals(global::protoconf.BasePacketsProto.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
